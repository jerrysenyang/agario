syntax = "proto3";
package game;



/***
Service

TODO: Might want to have RegisterUser return RegisterResponse, and then 
have another unary call that loads in the initial game state.
***/
service Game {
    rpc GameUpdate (PlayerAction) returns (GameState) {}
    rpc RegisterUser (RegisterRequest) returns (GameState) {}
}


/*** 
Server Messages
***/
message Player {
    Cell cell = 1;
    string username = 5;
}

message Cell {
    int32 x_pos = 1;
    int32 y_pos = 2;
    float size = 3;
    string color = 4;
}

message GameState {
    repeated Player players = 1;
    repeated Cell food = 2;
    bool alive = 3;
    // TODO: Can add more features
}


/***
Client Messages
***/
message PolarVector {
    float x = 1;
    float y = 2;
}

enum PlayerActionType {
    MOVE = 0;
    SHOOT = 1;
}

message PlayerAction {
    float x = 1;
    float y = 2;
    PlayerActionType action_type = 3;
    string username = 4;
}

message RegisterRequest {
    string username = 1;
}
